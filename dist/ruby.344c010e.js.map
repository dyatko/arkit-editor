{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/ruby/ruby.js","../node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","indentationRules","increaseIndentPattern","RegExp","decreaseIndentPattern","language","tokenPostfix","keywords","keywordops","builtins","declarations","linedecls","operators","token","symbols","escape","escapes","decpart","decimal","delim","heredelim","regexpctl","regexpesc","tokenizer","root","cases","next","include","dodecl","switchTo","modifier","sstring","dstring","heredoc","interpolated","interpolated_compound","pregexp","regexp","regexcontrol","regexrange","regexpcomment","pstring","qstring","qqstring","whitespace","comment","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","window","reload","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"ruby.344c010e.js","sourceRoot":"../src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '#',\n        blockComment: ['=begin', '=end'],\n    },\n    brackets: [\n        ['(', ')'],\n        ['{', '}'],\n        ['[', ']']\n    ],\n    autoClosingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    surroundingPairs: [\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' },\n        { open: '\"', close: '\"' },\n        { open: '\\'', close: '\\'' },\n    ],\n    indentationRules: {\n        increaseIndentPattern: new RegExp('^\\\\s*((begin|class|(private|protected)\\\\s+def|def|else|elsif|ensure|for|if|module|rescue|unless|until|when|while|case)|([^#]*\\\\sdo\\\\b)|([^#]*=\\\\s*(case|if|unless)))\\\\b([^#\\\\{;]|(\"|\\'|\\/).*\\\\4)*(#.*)?$'),\n        decreaseIndentPattern: new RegExp('^\\\\s*([}\\\\]]([,)]?\\\\s*(#|$)|\\\\.[a-zA-Z_]\\\\w*\\\\b)|(end|rescue|ensure|else|elsif|when)\\\\b)'),\n    }\n};\n/*\n * Ruby language definition\n *\n * Quite a complex language due to elaborate escape sequences\n * and quoting of literate strings/regular expressions, and\n * an 'end' keyword that does not always apply to modifiers like until and while,\n * and a 'do' keyword that sometimes starts a block, but sometimes is part of\n * another statement (like 'while').\n *\n * (1) end blocks:\n * 'end' may end declarations like if or until, but sometimes 'if' or 'until'\n * are modifiers where there is no 'end'. Also, 'do' sometimes starts a block\n * that is ended by 'end', but sometimes it is part of a 'while', 'for', or 'until'\n * To do proper brace matching we do some elaborate state manipulation.\n * some examples:\n *\n *   until bla do\n *     work until tired\n *     list.each do\n *       something if test\n *     end\n *   end\n *\n * or\n *\n * if test\n *  something (if test then x end)\n *  bar if bla\n * end\n *\n * or, how about using class as a property..\n *\n * class Test\n *   def endpoint\n *     self.class.endpoint || routes\n *   end\n * end\n *\n * (2) quoting:\n * there are many kinds of strings and escape sequences. But also, one can\n * start many string-like things as '%qx' where q specifies the kind of string\n * (like a command, escape expanded, regular expression, symbol etc.), and x is\n * some character and only another 'x' ends the sequence. Except for brackets\n * where the closing bracket ends the sequence.. and except for a nested bracket\n * inside the string like entity. Also, such strings can contain interpolated\n * ruby expressions again (and span multiple lines). Moreover, expanded\n * regular expression can also contain comments.\n */\nexport var language = {\n    tokenPostfix: '.ruby',\n    keywords: [\n        '__LINE__', '__ENCODING__', '__FILE__', 'BEGIN', 'END', 'alias', 'and', 'begin',\n        'break', 'case', 'class', 'def', 'defined?', 'do', 'else', 'elsif', 'end',\n        'ensure', 'for', 'false', 'if', 'in', 'module', 'next', 'nil', 'not', 'or', 'redo',\n        'rescue', 'retry', 'return', 'self', 'super', 'then', 'true', 'undef', 'unless',\n        'until', 'when', 'while', 'yield',\n    ],\n    keywordops: [\n        '::', '..', '...', '?', ':', '=>'\n    ],\n    builtins: [\n        'require', 'public', 'private', 'include', 'extend', 'attr_reader',\n        'protected', 'private_class_method', 'protected_class_method', 'new'\n    ],\n    // these are closed by 'end' (if, while and until are handled separately)\n    declarations: [\n        'module', 'class', 'def', 'case', 'do', 'begin', 'for', 'if', 'while', 'until', 'unless'\n    ],\n    linedecls: [\n        'def', 'case', 'do', 'begin', 'for', 'if', 'while', 'until', 'unless'\n    ],\n    operators: [\n        '^', '&', '|', '<=>', '==', '===', '!~', '=~', '>', '>=', '<', '<=', '<<', '>>', '+',\n        '-', '*', '/', '%', '**', '~', '+@', '-@', '[]', '[]=', '`',\n        '+=', '-=', '*=', '**=', '/=', '^=', '%=', '<<=', '>>=', '&=', '&&=', '||=', '|='\n    ],\n    brackets: [\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' }\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%\\.]+/,\n    // escape sequences\n    escape: /(?:[abefnrstv\\\\\"'\\n\\r]|[0-7]{1,3}|x[0-9A-Fa-f]{1,2}|u[0-9A-Fa-f]{4})/,\n    escapes: /\\\\(?:C\\-(@escape|.)|c(@escape|.)|@escape)/,\n    decpart: /\\d(_?\\d)*/,\n    decimal: /0|@decpart/,\n    delim: /[^a-zA-Z0-9\\s\\n\\r]/,\n    heredelim: /(?:\\w+|'[^']*'|\"[^\"]*\"|`[^`]*`)/,\n    regexpctl: /[(){}\\[\\]\\$\\^|\\-*+?\\.]/,\n    regexpesc: /\\\\(?:[AzZbBdDfnrstvwWn0\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})?/,\n    // The main tokenizer for our languages\n    tokenizer: {\n        // Main entry.\n        // root.<decl> where decl is the current opening declaration (like 'class')\n        root: [\n            // identifiers and keywords\n            // most complexity here is due to matching 'end' correctly with declarations.\n            // We distinguish a declaration that comes first on a line, versus declarations further on a line (which are most likey modifiers)\n            [/^(\\s*)([a-z_]\\w*[!?=]?)/, ['white',\n                    {\n                        cases: {\n                            'for|until|while': { token: 'keyword.$2', next: '@dodecl.$2' },\n                            '@declarations': { token: 'keyword.$2', next: '@root.$2' },\n                            'end': { token: 'keyword.$S2', next: '@pop' },\n                            '@keywords': 'keyword',\n                            '@builtins': 'predefined',\n                            '@default': 'identifier'\n                        }\n                    }]],\n            [/[a-z_]\\w*[!?=]?/,\n                {\n                    cases: {\n                        'if|unless|while|until': { token: 'keyword.$0x', next: '@modifier.$0x' },\n                        'for': { token: 'keyword.$2', next: '@dodecl.$2' },\n                        '@linedecls': { token: 'keyword.$0', next: '@root.$0' },\n                        'end': { token: 'keyword.$S2', next: '@pop' },\n                        '@keywords': 'keyword',\n                        '@builtins': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            [/[A-Z][\\w]*[!?=]?/, 'constructor.identifier'],\n            [/\\$[\\w]*/, 'global.constant'],\n            [/@[\\w]*/, 'namespace.instance.identifier'],\n            [/@@[\\w]*/, 'namespace.class.identifier'],\n            // here document\n            [/<<[-~](@heredelim).*/, { token: 'string.heredoc.delimiter', next: '@heredoc.$1' }],\n            [/[ \\t\\r\\n]+<<(@heredelim).*/, { token: 'string.heredoc.delimiter', next: '@heredoc.$1' }],\n            [/^<<(@heredelim).*/, { token: 'string.heredoc.delimiter', next: '@heredoc.$1' }],\n            // whitespace\n            { include: '@whitespace' },\n            // strings\n            [/\"/, { token: 'string.d.delim', next: '@dstring.d.\"' }],\n            [/'/, { token: 'string.sq.delim', next: '@sstring.sq' }],\n            // % literals. For efficiency, rematch in the 'pstring' state\n            [/%([rsqxwW]|Q?)/, { token: '@rematch', next: 'pstring' }],\n            // commands and symbols\n            [/`/, { token: 'string.x.delim', next: '@dstring.x.`' }],\n            [/:(\\w|[$@])\\w*[!?=]?/, 'string.s'],\n            [/:\"/, { token: 'string.s.delim', next: '@dstring.s.\"' }],\n            [/:'/, { token: 'string.s.delim', next: '@sstring.s' }],\n            // regular expressions. Lookahead for a (not escaped) closing forwardslash on the same line\n            [/\\/(?=(\\\\\\/|[^\\/\\n])+\\/)/, { token: 'regexp.delim', next: '@regexp' }],\n            // delimiters and operators\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/@symbols/, {\n                    cases: {\n                        '@keywordops': 'keyword',\n                        '@operators': 'operator',\n                        '@default': ''\n                    }\n                }],\n            [/[;,]/, 'delimiter'],\n            // numbers\n            [/0[xX][0-9a-fA-F](_?[0-9a-fA-F])*/, 'number.hex'],\n            [/0[_oO][0-7](_?[0-7])*/, 'number.octal'],\n            [/0[bB][01](_?[01])*/, 'number.binary'],\n            [/0[dD]@decpart/, 'number'],\n            [/@decimal((\\.@decpart)?([eE][\\-+]?@decpart)?)/, {\n                    cases: {\n                        '$1': 'number.float',\n                        '@default': 'number'\n                    }\n                }],\n        ],\n        // used to not treat a 'do' as a block opener if it occurs on the same\n        // line as a 'do' statement: 'while|until|for'\n        // dodecl.<decl> where decl is the declarations started, like 'while'\n        dodecl: [\n            [/^/, { token: '', switchTo: '@root.$S2' }],\n            [/[a-z_]\\w*[!?=]?/, {\n                    cases: {\n                        'end': { token: 'keyword.$S2', next: '@pop' },\n                        'do': { token: 'keyword', switchTo: '@root.$S2' },\n                        '@linedecls': { token: '@rematch', switchTo: '@root.$S2' },\n                        '@keywords': 'keyword',\n                        '@builtins': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            { include: '@root' }\n        ],\n        // used to prevent potential modifiers ('if|until|while|unless') to match\n        // with 'end' keywords.\n        // modifier.<decl>x where decl is the declaration starter, like 'if'\n        modifier: [\n            [/^/, '', '@pop'],\n            [/[a-z_]\\w*[!?=]?/, {\n                    cases: {\n                        'end': { token: 'keyword.$S2', next: '@pop' },\n                        'then|else|elsif|do': { token: 'keyword', switchTo: '@root.$S2' },\n                        '@linedecls': { token: '@rematch', switchTo: '@root.$S2' },\n                        '@keywords': 'keyword',\n                        '@builtins': 'predefined',\n                        '@default': 'identifier'\n                    }\n                }],\n            { include: '@root' }\n        ],\n        // single quote strings (also used for symbols)\n        // sstring.<kind>  where kind is 'sq' (single quote) or 's' (symbol)\n        sstring: [\n            [/[^\\\\']+/, 'string.$S2'],\n            [/\\\\\\\\|\\\\'|\\\\$/, 'string.$S2.escape'],\n            [/\\\\./, 'string.$S2.invalid'],\n            [/'/, { token: 'string.$S2.delim', next: '@pop' }]\n        ],\n        // double quoted \"string\".\n        // dstring.<kind>.<delim> where kind is 'd' (double quoted), 'x' (command), or 's' (symbol)\n        // and delim is the ending delimiter (\" or `)\n        dstring: [\n            [/[^\\\\`\"#]+/, 'string.$S2'],\n            [/#/, 'string.$S2.escape', '@interpolated'],\n            [/\\\\$/, 'string.$S2.escape'],\n            [/@escapes/, 'string.$S2.escape'],\n            [/\\\\./, 'string.$S2.escape.invalid'],\n            [/[`\"]/, {\n                    cases: {\n                        '$#==$S3': { token: 'string.$S2.delim', next: '@pop' },\n                        '@default': 'string.$S2'\n                    }\n                }]\n        ],\n        // literal documents\n        // heredoc.<close> where close is the closing delimiter\n        heredoc: [\n            [/^(\\s*)(@heredelim)$/, {\n                    cases: {\n                        '$2==$S2': ['string.heredoc', { token: 'string.heredoc.delimiter', next: '@pop' }],\n                        '@default': ['string.heredoc', 'string.heredoc']\n                    }\n                }],\n            [/.*/, 'string.heredoc'],\n        ],\n        // interpolated sequence\n        interpolated: [\n            [/\\$\\w*/, 'global.constant', '@pop'],\n            [/@\\w*/, 'namespace.class.identifier', '@pop'],\n            [/@@\\w*/, 'namespace.instance.identifier', '@pop'],\n            [/[{]/, { token: 'string.escape.curly', switchTo: '@interpolated_compound' }],\n            ['', '', '@pop'],\n        ],\n        // any code\n        interpolated_compound: [\n            [/[}]/, { token: 'string.escape.curly', next: '@pop' }],\n            { include: '@root' },\n        ],\n        // %r quoted regexp\n        // pregexp.<open>.<close> where open/close are the open/close delimiter\n        pregexp: [\n            { include: '@whitespace' },\n            // turns out that you can quote using regex control characters, aargh!\n            // for example; %r|kgjgaj| is ok (even though | is used for alternation)\n            // so, we need to match those first\n            [/[^\\(\\{\\[\\\\]/, {\n                    cases: {\n                        '$#==$S3': { token: 'regexp.delim', next: '@pop' },\n                        '$#==$S2': { token: 'regexp.delim', next: '@push' },\n                        '~[)}\\\\]]': '@brackets.regexp.escape.control',\n                        '~@regexpctl': 'regexp.escape.control',\n                        '@default': 'regexp'\n                    }\n                }],\n            { include: '@regexcontrol' },\n        ],\n        // We match regular expression quite precisely\n        regexp: [\n            { include: '@regexcontrol' },\n            [/[^\\\\\\/]/, 'regexp'],\n            ['/[ixmp]*', { token: 'regexp.delim' }, '@pop'],\n        ],\n        regexcontrol: [\n            [/(\\{)(\\d+(?:,\\d*)?)(\\})/, ['@brackets.regexp.escape.control', 'regexp.escape.control', '@brackets.regexp.escape.control']],\n            [/(\\[)(\\^?)/, ['@brackets.regexp.escape.control', { token: 'regexp.escape.control', next: '@regexrange' }]],\n            [/(\\()(\\?[:=!])/, ['@brackets.regexp.escape.control', 'regexp.escape.control']],\n            [/\\(\\?#/, { token: 'regexp.escape.control', next: '@regexpcomment' }],\n            [/[()]/, '@brackets.regexp.escape.control'],\n            [/@regexpctl/, 'regexp.escape.control'],\n            [/\\\\$/, 'regexp.escape'],\n            [/@regexpesc/, 'regexp.escape'],\n            [/\\\\\\./, 'regexp.invalid'],\n            [/#/, 'regexp.escape', '@interpolated'],\n        ],\n        regexrange: [\n            [/-/, 'regexp.escape.control'],\n            [/\\^/, 'regexp.invalid'],\n            [/\\\\$/, 'regexp.escape'],\n            [/@regexpesc/, 'regexp.escape'],\n            [/[^\\]]/, 'regexp'],\n            [/\\]/, '@brackets.regexp.escape.control', '@pop'],\n        ],\n        regexpcomment: [\n            [/[^)]+/, 'comment'],\n            [/\\)/, { token: 'regexp.escape.control', next: '@pop' }]\n        ],\n        // % quoted strings\n        // A bit repetitive since we need to often special case the kind of ending delimiter\n        pstring: [\n            [/%([qws])\\(/, { token: 'string.$1.delim', switchTo: '@qstring.$1.(.)' }],\n            [/%([qws])\\[/, { token: 'string.$1.delim', switchTo: '@qstring.$1.[.]' }],\n            [/%([qws])\\{/, { token: 'string.$1.delim', switchTo: '@qstring.$1.{.}' }],\n            [/%([qws])</, { token: 'string.$1.delim', switchTo: '@qstring.$1.<.>' }],\n            [/%([qws])(@delim)/, { token: 'string.$1.delim', switchTo: '@qstring.$1.$2.$2' }],\n            [/%r\\(/, { token: 'regexp.delim', switchTo: '@pregexp.(.)' }],\n            [/%r\\[/, { token: 'regexp.delim', switchTo: '@pregexp.[.]' }],\n            [/%r\\{/, { token: 'regexp.delim', switchTo: '@pregexp.{.}' }],\n            [/%r</, { token: 'regexp.delim', switchTo: '@pregexp.<.>' }],\n            [/%r(@delim)/, { token: 'regexp.delim', switchTo: '@pregexp.$1.$1' }],\n            [/%(x|W|Q?)\\(/, { token: 'string.$1.delim', switchTo: '@qqstring.$1.(.)' }],\n            [/%(x|W|Q?)\\[/, { token: 'string.$1.delim', switchTo: '@qqstring.$1.[.]' }],\n            [/%(x|W|Q?)\\{/, { token: 'string.$1.delim', switchTo: '@qqstring.$1.{.}' }],\n            [/%(x|W|Q?)</, { token: 'string.$1.delim', switchTo: '@qqstring.$1.<.>' }],\n            [/%(x|W|Q?)(@delim)/, { token: 'string.$1.delim', switchTo: '@qqstring.$1.$2.$2' }],\n            [/%([rqwsxW]|Q?)./, { token: 'invalid', next: '@pop' }],\n            [/./, { token: 'invalid', next: '@pop' }],\n        ],\n        // non-expanded quoted string.\n        // qstring.<kind>.<open>.<close>\n        //  kind = q|w|s  (single quote, array, symbol)\n        //  open = open delimiter\n        //  close = close delimiter\n        qstring: [\n            [/\\\\$/, 'string.$S2.escape'],\n            [/\\\\./, 'string.$S2.escape'],\n            [/./, {\n                    cases: {\n                        '$#==$S4': { token: 'string.$S2.delim', next: '@pop' },\n                        '$#==$S3': { token: 'string.$S2.delim', next: '@push' },\n                        '@default': 'string.$S2'\n                    }\n                }],\n        ],\n        // expanded quoted string.\n        // qqstring.<kind>.<open>.<close>\n        //  kind = Q|W|x  (double quote, array, command)\n        //  open = open delimiter\n        //  close = close delimiter\n        qqstring: [\n            [/#/, 'string.$S2.escape', '@interpolated'],\n            { include: '@qstring' }\n        ],\n        // whitespace & comments\n        whitespace: [\n            [/[ \\t\\r\\n]+/, ''],\n            [/^\\s*=begin\\b/, 'comment', '@comment'],\n            [/#.*$/, 'comment'],\n        ],\n        comment: [\n            [/[^=]+/, 'comment'],\n            [/^\\s*=begin\\b/, 'comment.invalid'],\n            [/^\\s*=end\\b.*/, 'comment', '@pop'],\n            [/[=]/, 'comment']\n        ],\n    }\n};\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}