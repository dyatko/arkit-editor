{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/postiats/postiats.js","../node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["conf","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","language","tokenPostfix","defaultToken","keywords","keywords_dlr","keywords_srp","irregular_keyword_list","keywords_types","keywords_effects","operators","token","symbols","IDENTFST","IDENTRST","symbolic","digit","digitseq0","xdigit","xdigitseq0","INTSP","FLOATSP","fexponent","fexponent_bin","deciexp","hexiexp","irregular_keywords","ESCHAR","start","tokenizer","root","regex","action","next","cases","nextEmbedded","lexing_COMMENT_block_ml","lexing_COMMENT_block_c","lexing_COMMENT_rest","lexing_EFFECT_commaseq0","lexing_EXTCODE","lexing_DQUOTE","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","window","reload","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"postiats.0b8aa33a.js","sourceRoot":"../src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Artyom Shalkhakov. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *\n *  Based on the ATS/Postiats lexer by Hongwei Xi.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nexport var conf = {\n    comments: {\n        lineComment: '//',\n        blockComment: ['(*', '*)'],\n    },\n    brackets: [['{', '}'], ['[', ']'], ['(', ')'], ['<', '>']],\n    autoClosingPairs: [\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\n    ]\n};\nexport var language = {\n    tokenPostfix: '.pats',\n    // TODO: staload and dynload are followed by a special kind of string literals\n    // with {$IDENTIFER} variables, and it also may make sense to highlight\n    // the punctuation (. and / and \\) differently.\n    // Set defaultToken to invalid to see what you do not tokenize yet\n    defaultToken: 'invalid',\n    // keyword reference: https://github.com/githwxi/ATS-Postiats/blob/master/src/pats_lexing_token.dats\n    keywords: [\n        //\n        \"abstype\",\n        \"abst0ype\",\n        \"absprop\",\n        \"absview\",\n        \"absvtype\",\n        \"absviewtype\",\n        \"absvt0ype\",\n        \"absviewt0ype\",\n        //\n        \"as\",\n        //\n        \"and\",\n        //\n        \"assume\",\n        //\n        \"begin\",\n        //\n        /*\n                \"case\", // CASE\n        */\n        //\n        \"classdec\",\n        //\n        \"datasort\",\n        //\n        \"datatype\",\n        \"dataprop\",\n        \"dataview\",\n        \"datavtype\",\n        \"dataviewtype\",\n        //\n        \"do\",\n        //\n        \"end\",\n        //\n        \"extern\",\n        \"extype\",\n        \"extvar\",\n        //\n        \"exception\",\n        //\n        \"fn\",\n        \"fnx\",\n        \"fun\",\n        //\n        \"prfn\",\n        \"prfun\",\n        //\n        \"praxi\",\n        \"castfn\",\n        //\n        \"if\",\n        \"then\",\n        \"else\",\n        //\n        \"ifcase\",\n        //\n        \"in\",\n        //\n        \"infix\",\n        \"infixl\",\n        \"infixr\",\n        \"prefix\",\n        \"postfix\",\n        //\n        \"implmnt\",\n        \"implement\",\n        //\n        \"primplmnt\",\n        \"primplement\",\n        //\n        \"import\",\n        //\n        /*\n                \"lam\", // LAM\n                \"llam\", // LLAM\n                \"fix\", // FIX\n        */\n        //\n        \"let\",\n        //\n        \"local\",\n        //\n        \"macdef\",\n        \"macrodef\",\n        //\n        \"nonfix\",\n        //\n        \"symelim\",\n        \"symintr\",\n        \"overload\",\n        //\n        \"of\",\n        \"op\",\n        //\n        \"rec\",\n        //\n        \"sif\",\n        \"scase\",\n        //\n        \"sortdef\",\n        /*\n        // HX: [sta] is now deprecated\n        */\n        \"sta\",\n        \"stacst\",\n        \"stadef\",\n        \"static\",\n        /*\n                \"stavar\", // T_STAVAR\n        */\n        //\n        \"staload\",\n        \"dynload\",\n        //\n        \"try\",\n        //\n        \"tkindef\",\n        //\n        /*\n                \"type\", // TYPE\n        */\n        \"typedef\",\n        \"propdef\",\n        \"viewdef\",\n        \"vtypedef\",\n        \"viewtypedef\",\n        //\n        /*\n                \"val\", // VAL\n        */\n        \"prval\",\n        //\n        \"var\",\n        \"prvar\",\n        //\n        \"when\",\n        \"where\",\n        //\n        /*\n                \"for\", // T_FOR\n                \"while\", // T_WHILE\n        */\n        //\n        \"with\",\n        //\n        \"withtype\",\n        \"withprop\",\n        \"withview\",\n        \"withvtype\",\n        \"withviewtype\",\n    ],\n    keywords_dlr: [\n        \"$delay\",\n        \"$ldelay\",\n        //\n        \"$arrpsz\",\n        \"$arrptrsize\",\n        //\n        \"$d2ctype\",\n        //\n        \"$effmask\",\n        \"$effmask_ntm\",\n        \"$effmask_exn\",\n        \"$effmask_ref\",\n        \"$effmask_wrt\",\n        \"$effmask_all\",\n        //\n        \"$extern\",\n        \"$extkind\",\n        \"$extype\",\n        \"$extype_struct\",\n        //\n        \"$extval\",\n        \"$extfcall\",\n        \"$extmcall\",\n        //\n        \"$literal\",\n        //\n        \"$myfilename\",\n        \"$mylocation\",\n        \"$myfunction\",\n        //\n        \"$lst\",\n        \"$lst_t\",\n        \"$lst_vt\",\n        \"$list\",\n        \"$list_t\",\n        \"$list_vt\",\n        //\n        \"$rec\",\n        \"$rec_t\",\n        \"$rec_vt\",\n        \"$record\",\n        \"$record_t\",\n        \"$record_vt\",\n        //\n        \"$tup\",\n        \"$tup_t\",\n        \"$tup_vt\",\n        \"$tuple\",\n        \"$tuple_t\",\n        \"$tuple_vt\",\n        //\n        \"$break\",\n        \"$continue\",\n        //\n        \"$raise\",\n        //\n        \"$showtype\",\n        //\n        \"$vcopyenv_v\",\n        \"$vcopyenv_vt\",\n        //\n        \"$tempenver\",\n        //\n        \"$solver_assert\",\n        \"$solver_verify\",\n    ],\n    keywords_srp: [\n        //\n        \"#if\",\n        \"#ifdef\",\n        \"#ifndef\",\n        //\n        \"#then\",\n        //\n        \"#elif\",\n        \"#elifdef\",\n        \"#elifndef\",\n        //\n        \"#else\",\n        \"#endif\",\n        //\n        \"#error\",\n        //\n        \"#prerr\",\n        \"#print\",\n        //\n        \"#assert\",\n        //\n        \"#undef\",\n        \"#define\",\n        //\n        \"#include\",\n        \"#require\",\n        //\n        \"#pragma\",\n        \"#codegen2\",\n        \"#codegen3\",\n    ],\n    irregular_keyword_list: [\n        \"val+\",\n        \"val-\",\n        \"val\",\n        \"case+\",\n        \"case-\",\n        \"case\",\n        \"addr@\",\n        \"addr\",\n        \"fold@\",\n        \"free@\",\n        \"fix@\",\n        \"fix\",\n        \"lam@\",\n        \"lam\",\n        \"llam@\",\n        \"llam\",\n        \"viewt@ype+\",\n        \"viewt@ype-\",\n        \"viewt@ype\",\n        \"viewtype+\",\n        \"viewtype-\",\n        \"viewtype\",\n        \"view+\",\n        \"view-\",\n        \"view@\",\n        \"view\",\n        \"type+\",\n        \"type-\",\n        \"type\",\n        \"vtype+\",\n        \"vtype-\",\n        \"vtype\",\n        \"vt@ype+\",\n        \"vt@ype-\",\n        \"vt@ype\",\n        \"viewt@ype+\",\n        \"viewt@ype-\",\n        \"viewt@ype\",\n        \"viewtype+\",\n        \"viewtype-\",\n        \"viewtype\",\n        \"prop+\",\n        \"prop-\",\n        \"prop\",\n        \"type+\",\n        \"type-\",\n        \"type\",\n        \"t@ype\",\n        \"t@ype+\",\n        \"t@ype-\",\n        \"abst@ype\",\n        \"abstype\",\n        \"absviewt@ype\",\n        \"absvt@ype\",\n        \"for*\",\n        \"for\",\n        \"while*\",\n        \"while\"\n    ],\n    keywords_types: [\n        'bool',\n        'double',\n        'byte',\n        'int',\n        'short',\n        'char',\n        'void',\n        'unit',\n        'long',\n        'float',\n        'string',\n        'strptr'\n    ],\n    // TODO: reference for this?\n    keywords_effects: [\n        \"0\",\n        \"fun\",\n        \"clo\",\n        \"prf\",\n        \"funclo\",\n        \"cloptr\",\n        \"cloref\",\n        \"ref\",\n        \"ntm\",\n        \"1\" // all effects\n    ],\n    operators: [\n        \"@\",\n        \"!\",\n        \"|\",\n        \"`\",\n        \":\",\n        \"$\",\n        \".\",\n        \"=\",\n        \"#\",\n        \"~\",\n        //\n        \"..\",\n        \"...\",\n        //\n        \"=>\",\n        // \"=<\", // T_EQLT\n        \"=<>\",\n        \"=/=>\",\n        \"=>>\",\n        \"=/=>>\",\n        //\n        \"<\",\n        \">\",\n        //\n        \"><\",\n        //\n        \".<\",\n        \">.\",\n        //\n        \".<>.\",\n        //\n        \"->\",\n        //\"-<\", // T_MINUSLT\n        \"-<>\",\n    ],\n    brackets: [\n        { open: ',(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '`(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '%(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '\\'(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '\\'{', close: '}', token: 'delimiter.parenthesis' },\n        { open: '@(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '@{', close: '}', token: 'delimiter.brace' },\n        { open: '@[', close: ']', token: 'delimiter.square' },\n        { open: '#[', close: ']', token: 'delimiter.square' },\n        { open: '{', close: '}', token: 'delimiter.curly' },\n        { open: '[', close: ']', token: 'delimiter.square' },\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\n        { open: '<', close: '>', token: 'delimiter.angle' }\n    ],\n    // we include these common regular expressions\n    symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n    IDENTFST: /[a-zA-Z_]/,\n    IDENTRST: /[a-zA-Z0-9_'$]/,\n    symbolic: /[%&+-./:=@~`^|*!$#?<>]/,\n    digit: /[0-9]/,\n    digitseq0: /@digit*/,\n    xdigit: /[0-9A-Za-z]/,\n    xdigitseq0: /@xdigit*/,\n    INTSP: /[lLuU]/,\n    FLOATSP: /[fFlL]/,\n    fexponent: /[eE][+-]?[0-9]+/,\n    fexponent_bin: /[pP][+-]?[0-9]+/,\n    deciexp: /\\.[0-9]*@fexponent?/,\n    hexiexp: /\\.[0-9a-zA-Z]*@fexponent_bin?/,\n    irregular_keywords: /val[+-]?|case[+-]?|addr\\@?|fold\\@|free\\@|fix\\@?|lam\\@?|llam\\@?|prop[+-]?|type[+-]?|view[+-@]?|viewt@?ype[+-]?|t@?ype[+-]?|v(iew)?t@?ype[+-]?|abst@?ype|absv(iew)?t@?ype|for\\*?|while\\*?/,\n    ESCHAR: /[ntvbrfa\\\\\\?'\"\\(\\[\\{]/,\n    start: 'root',\n    // The main tokenizer for ATS/Postiats\n    // reference: https://github.com/githwxi/ATS-Postiats/blob/master/src/pats_lexing.dats\n    tokenizer: {\n        root: [\n            // lexing_blankseq0\n            { regex: /[ \\t\\r\\n]+/, action: { token: '' } },\n            // NOTE: (*) is an invalid ML-like comment!\n            { regex: /\\(\\*\\)/, action: { token: 'invalid' } },\n            { regex: /\\(\\*/, action: { token: 'comment', next: 'lexing_COMMENT_block_ml' } },\n            { regex: /\\(/, action: '@brackets' /*{ token: 'delimiter.parenthesis' }*/ },\n            { regex: /\\)/, action: '@brackets' /*{ token: 'delimiter.parenthesis' }*/ },\n            { regex: /\\[/, action: '@brackets' /*{ token: 'delimiter.bracket' }*/ },\n            { regex: /\\]/, action: '@brackets' /*{ token: 'delimiter.bracket' }*/ },\n            { regex: /\\{/, action: '@brackets' /*{ token: 'delimiter.brace' }*/ },\n            { regex: /\\}/, action: '@brackets' /*{ token: 'delimiter.brace' }*/ },\n            // lexing_COMMA\n            { regex: /,\\(/, action: '@brackets' /*{ token: 'delimiter.parenthesis' }*/ },\n            { regex: /,/, action: { token: 'delimiter.comma' } },\n            { regex: /;/, action: { token: 'delimiter.semicolon' } },\n            // lexing_AT\n            { regex: /@\\(/, action: '@brackets' /* { token: 'delimiter.parenthesis' }*/ },\n            { regex: /@\\[/, action: '@brackets' /* { token: 'delimiter.bracket' }*/ },\n            { regex: /@\\{/, action: '@brackets' /*{ token: 'delimiter.brace' }*/ },\n            // lexing_COLON\n            { regex: /:</, action: { token: 'keyword', next: '@lexing_EFFECT_commaseq0' } },\n            /*\n            lexing_DOT:\n\n            . // SYMBOLIC => lexing_IDENT_sym\n            . FLOATDOT => lexing_FLOAT_deciexp\n            . DIGIT => T_DOTINT\n            */\n            { regex: /\\.@symbolic+/, action: { token: 'identifier.sym' } },\n            // FLOATDOT case\n            { regex: /\\.@digit*@fexponent@FLOATSP*/, action: { token: 'number.float' } },\n            { regex: /\\.@digit+/, action: { token: 'number.float' } },\n            // lexing_DOLLAR:\n            // '$' IDENTFST IDENTRST* => lexing_IDENT_dlr, _ => lexing_IDENT_sym\n            {\n                regex: /\\$@IDENTFST@IDENTRST*/,\n                action: {\n                    cases: {\n                        '@keywords_dlr': { token: 'keyword.dlr' },\n                        '@default': { token: 'namespace' },\n                    }\n                }\n            },\n            // lexing_SHARP:\n            // '#' IDENTFST IDENTRST* => lexing_ident_srp, _ => lexing_IDENT_sym\n            {\n                regex: /\\#@IDENTFST@IDENTRST*/,\n                action: {\n                    cases: {\n                        '@keywords_srp': { token: 'keyword.srp' },\n                        '@default': { token: 'identifier' },\n                    }\n                }\n            },\n            // lexing_PERCENT:\n            { regex: /%\\(/, action: { token: 'delimiter.parenthesis' } },\n            { regex: /^%{(#|\\^|\\$)?/, action: { token: 'keyword', next: '@lexing_EXTCODE', nextEmbedded: 'text/javascript' } },\n            { regex: /^%}/, action: { token: 'keyword' } },\n            // lexing_QUOTE\n            { regex: /'\\(/, action: { token: 'delimiter.parenthesis' } },\n            { regex: /'\\[/, action: { token: 'delimiter.bracket' } },\n            { regex: /'\\{/, action: { token: 'delimiter.brace' } },\n            [/(')(\\\\@ESCHAR|\\\\[xX]@xdigit+|\\\\@digit+)(')/, ['string', 'string.escape', 'string']],\n            [/'[^\\\\']'/, 'string'],\n            // lexing_DQUOTE\n            [/\"/, 'string.quote', '@lexing_DQUOTE'],\n            // lexing_BQUOTE\n            { regex: /`\\(/, action: '@brackets' /* { token: 'delimiter.parenthesis' }*/ },\n            // TODO: otherwise, try lexing_IDENT_sym\n            { regex: /\\\\/, action: { token: 'punctuation' } },\n            // lexing_IDENT_alp:\n            // NOTE: (?!regex) is syntax for \"not-followed-by\" regex\n            // to resolve ambiguity such as foreach$fwork being incorrectly lexed as [for] [each$fwork]!\n            { regex: /@irregular_keywords(?!@IDENTRST)/, action: { token: 'keyword' } },\n            {\n                regex: /@IDENTFST@IDENTRST*[<!\\[]?/,\n                action: {\n                    cases: {\n                        // TODO: dynload and staload should be specially parsed\n                        // dynload whitespace+ \"special_string\"\n                        // this special string is really:\n                        //  '/' '\\\\' '.' => punctuation\n                        // ({\\$)([a-zA-Z_][a-zA-Z_0-9]*)(}) => punctuation,keyword,punctuation\n                        // [^\"] => identifier/literal\n                        '@keywords': { token: 'keyword' },\n                        '@keywords_types': { token: 'type' },\n                        '@default': { token: 'identifier' }\n                    }\n                }\n            },\n            // lexing_IDENT_sym:\n            { regex: /\\/\\/\\/\\//, action: { token: 'comment', next: '@lexing_COMMENT_rest' } },\n            { regex: /\\/\\/.*$/, action: { token: 'comment' } },\n            { regex: /\\/\\*/, action: { token: 'comment', next: '@lexing_COMMENT_block_c' } },\n            // AS-20160627: specifically for effect annotations\n            { regex: /-<|=</, action: { token: 'keyword', next: '@lexing_EFFECT_commaseq0' } },\n            {\n                regex: /@symbolic+/,\n                action: {\n                    cases: {\n                        '@operators': 'keyword',\n                        '@default': 'operator'\n                    }\n                }\n            },\n            // lexing_ZERO:\n            // FIXME: this one is quite messy/unfinished yet\n            // TODO: lexing_INT_hex\n            // - testing_hexiexp => lexing_FLOAT_hexiexp\n            // - testing_fexponent_bin => lexing_FLOAT_hexiexp\n            // - testing_intspseq0 => T_INT_hex\n            // lexing_INT_hex:\n            { regex: /0[xX]@xdigit+(@hexiexp|@fexponent_bin)@FLOATSP*/, action: { token: 'number.float' } },\n            { regex: /0[xX]@xdigit+@INTSP*/, action: { token: 'number.hex' } },\n            { regex: /0[0-7]+(?![0-9])@INTSP*/, action: { token: 'number.octal' } },\n            //{regex: /0/, action: { token: 'number' } }, // INTZERO\n            // lexing_INT_dec:\n            // - testing_deciexp => lexing_FLOAT_deciexp\n            // - testing_fexponent => lexing_FLOAT_deciexp\n            // - otherwise => intspseq0 ([0-9]*[lLuU]?)\n            { regex: /@digit+(@fexponent|@deciexp)@FLOATSP*/, action: { token: 'number.float' } },\n            { regex: /@digit@digitseq0@INTSP*/, action: { token: 'number.decimal' } },\n            // DIGIT, if followed by digitseq0, is lexing_INT_dec\n            { regex: /@digit+@INTSP*/, action: { token: 'number' } },\n        ],\n        lexing_COMMENT_block_ml: [\n            [/[^\\(\\*]+/, 'comment'],\n            [/\\(\\*/, 'comment', '@push'],\n            [/\\(\\*/, 'comment.invalid'],\n            [/\\*\\)/, 'comment', '@pop'],\n            [/\\*/, 'comment']\n        ],\n        lexing_COMMENT_block_c: [\n            [/[^\\/*]+/, 'comment'],\n            // [/\\/\\*/, 'comment', '@push' ],    // nested C-style block comments not allowed\n            // [/\\/\\*/,    'comment.invalid' ],\t// NOTE: this breaks block comments in the shape of /* //*/\n            [/\\*\\//, 'comment', '@pop'],\n            [/[\\/*]/, 'comment']\n        ],\n        lexing_COMMENT_rest: [\n            [/$/, 'comment', '@pop'],\n            [/.*/, 'comment']\n        ],\n        // NOTE: added by AS, specifically for highlighting\n        lexing_EFFECT_commaseq0: [\n            {\n                regex: /@IDENTFST@IDENTRST+|@digit+/,\n                action: {\n                    cases: {\n                        '@keywords_effects': { token: 'type.effect' },\n                        '@default': { token: 'identifier' }\n                    }\n                }\n            },\n            { regex: /,/, action: { token: 'punctuation' } },\n            { regex: />/, action: { token: '@rematch', next: '@pop' } },\n        ],\n        lexing_EXTCODE: [\n            { regex: /^%}/, action: { token: '@rematch', next: '@pop', nextEmbedded: '@pop' } },\n            { regex: /[^%]+/, action: '' },\n        ],\n        lexing_DQUOTE: [\n            { regex: /\"/, action: { token: 'string.quote', next: '@pop' } },\n            // AS-20160628: additional hi-lighting for variables in staload/dynload strings\n            { regex: /(\\{\\$)(@IDENTFST@IDENTRST*)(\\})/, action: [{ token: 'string.escape' }, { token: 'identifier' }, { token: 'string.escape' }] },\n            { regex: /\\\\$/, action: { token: 'string.escape' } },\n            { regex: /\\\\(@ESCHAR|[xX]@xdigit+|@digit+)/, action: { token: 'string.escape' } },\n            { regex: /[^\\\\\"]+/, action: { token: 'string' } }\n        ],\n    },\n};\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}